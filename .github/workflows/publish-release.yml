name: Publish Release

on:
  pull_request:
    types:
      - closed

permissions:
  pages: write
  id-token: write
  contents: write
  packages: write
  pull-requests: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  create-github-release:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Syncing package.json versions
        run: bun run update-versions

      - name: Build
        run: bun run build

      - name: Create GitHub Release
        uses: googleapis/release-please-action@v4
        id: release
        with:
          skip-github-pull-request: true
          config-file: release-please-config.json
          manifest-file: release-please-manifest.json
          repo-url: hiddentao/chatfall

      - name: Upload Release Artifact
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ steps.release.outputs.tag_name }} ./client/dist/chatfall.* ./server/dist-bin/chatfall-* ./server/dist/chatfall-server.*
          
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}        

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: ./server
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.release.outputs.tag_name }}
          labels: ${{ steps.meta.outputs.labels }}


  publish-npm:
    needs: create-github-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Syncing package.json versions
        run: bun run update-versions

      - name: Build
        run: bun run build

      - name: Publish Client NPM package
        run: |
          npm config set '//registry.npmjs.org/:_authToken' "${{ secrets.NPM_TOKEN }}"
          bun run publish-npm

          
  publish-docs:
    needs: create-github-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Syncing package.json versions
        run: bun run update-versions

      - name: Build
        run: cd website && bun run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: website/build

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
